@model ReviewListViewModel

<div class="text-center my-3 border-bottom">
    @if (Model != null && Model.Reviews.Any())
    {
        foreach (var review in Model.Reviews)
        {
            <div class="card shadow rounded-5 bg-light my-3">
                <div class="card-body">
                    <div class="d-flex justify-content-between border-bottom">
                        <p class="card-text">@review.User.UserName</p>
                        <p class="card-text"><small class="text-muted">Rating: @review.Rating / 5</small></p>
                        <p class="card-text"><small class="text-muted">Date: @review.ReviewDate.ToShortDateString()</small></p>
                    </div>
                    <div class="d-flex justify-content-between mt-2">
                        <div class="card-text review-text">
                            <p id="reviewText-@review.ReviewId">@review.ReviewText</p>
                            <a id="showMore-@review.ReviewId" class="show-more" style="display: none;">Show more</a>
                        </div>


                        <div>
                            @if (User.Identity.IsAuthenticated && User.Identity.Name == review.User.UserName)
                            {
                                <form asp-controller="Product" asp-action="RemoveReview" method="post">
                                    <input type="hidden" name="id" value="@review.ReviewId" />
                                    <input type="hidden" name="productId" value="@ViewData["ProductId"]" />
                                    <button type="submit" class="btn" data-toggle="tooltip" data-placement="bottom" title="Delete">
                                        <i class="fa fa-trash"></i>
                                    </button>
                                </form>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }

        <div class="d-flex justify-content-end mb-1">
            @{
                var routeValues = ViewContext.HttpContext.Request.Query.ToDictionary(q => q.Key, q => (object)q.Value.ToString());
            }
            <div page-model="@Model?.Pagination" 
                 page-action="get" 
                 page-classes-enabled="true" 
                 page-class="btn"
                 page-class-normal="btn-outline-dark" 
                 page-class-selected="btn-primary" 
                 class="btn-group"
                 route-values="@(new RouteValueDictionary(routeValues))">
            </div>
        </div>
    }
    else
    {
        <p>No reviews have been made for this product yet.</p>
    }
</div>

<link rel="stylesheet" href="~/css/productReviews.css" />
<script asp-append-version="true" src="~/lib/jquery/jquery.min.js"></script>
<script src="~/js/productReviews.js"></script>
